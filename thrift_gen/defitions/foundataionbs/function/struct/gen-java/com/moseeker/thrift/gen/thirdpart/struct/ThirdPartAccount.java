/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.moseeker.thrift.gen.thirdpart.struct;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.2)", date = "2016-11-8")
public class ThirdPartAccount implements org.apache.thrift.TBase<ThirdPartAccount, ThirdPartAccount._Fields>, java.io.Serializable, Cloneable, Comparable<ThirdPartAccount> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThirdPartAccount");

  private static final org.apache.thrift.protocol.TField ID_FIELD_DESC = new org.apache.thrift.protocol.TField("id", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CHANNEL_FIELD_DESC = new org.apache.thrift.protocol.TField("channel", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField USERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("username", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField PASSWORD_FIELD_DESC = new org.apache.thrift.protocol.TField("password", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField MEMBERNAME_FIELD_DESC = new org.apache.thrift.protocol.TField("membername", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField BINDING_FIELD_DESC = new org.apache.thrift.protocol.TField("binding", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField COMPANY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("company_id", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField REMAIN_NUM_FIELD_DESC = new org.apache.thrift.protocol.TField("remain_num", org.apache.thrift.protocol.TType.I32, (short)9);
  private static final org.apache.thrift.protocol.TField SYNC_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("sync_time", org.apache.thrift.protocol.TType.STRING, (short)10);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ThirdPartAccountStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ThirdPartAccountTupleSchemeFactory());
  }

  public int id; // required
  public String name; // required
  public int channel; // required
  public String username; // required
  public String password; // required
  public String membername; // required
  public int binding; // required
  public int company_id; // required
  public int remain_num; // required
  public String sync_time; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ID((short)1, "id"),
    NAME((short)2, "name"),
    CHANNEL((short)3, "channel"),
    USERNAME((short)4, "username"),
    PASSWORD((short)5, "password"),
    MEMBERNAME((short)6, "membername"),
    BINDING((short)7, "binding"),
    COMPANY_ID((short)8, "company_id"),
    REMAIN_NUM((short)9, "remain_num"),
    SYNC_TIME((short)10, "sync_time");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ID
          return ID;
        case 2: // NAME
          return NAME;
        case 3: // CHANNEL
          return CHANNEL;
        case 4: // USERNAME
          return USERNAME;
        case 5: // PASSWORD
          return PASSWORD;
        case 6: // MEMBERNAME
          return MEMBERNAME;
        case 7: // BINDING
          return BINDING;
        case 8: // COMPANY_ID
          return COMPANY_ID;
        case 9: // REMAIN_NUM
          return REMAIN_NUM;
        case 10: // SYNC_TIME
          return SYNC_TIME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __ID_ISSET_ID = 0;
  private static final int __CHANNEL_ISSET_ID = 1;
  private static final int __BINDING_ISSET_ID = 2;
  private static final int __COMPANY_ID_ISSET_ID = 3;
  private static final int __REMAIN_NUM_ISSET_ID = 4;
  private byte __isset_bitfield = 0;
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ID, new org.apache.thrift.meta_data.FieldMetaData("id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CHANNEL, new org.apache.thrift.meta_data.FieldMetaData("channel", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USERNAME, new org.apache.thrift.meta_data.FieldMetaData("username", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PASSWORD, new org.apache.thrift.meta_data.FieldMetaData("password", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.MEMBERNAME, new org.apache.thrift.meta_data.FieldMetaData("membername", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BINDING, new org.apache.thrift.meta_data.FieldMetaData("binding", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.COMPANY_ID, new org.apache.thrift.meta_data.FieldMetaData("company_id", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.REMAIN_NUM, new org.apache.thrift.meta_data.FieldMetaData("remain_num", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.SYNC_TIME, new org.apache.thrift.meta_data.FieldMetaData("sync_time", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , "Datetime")));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThirdPartAccount.class, metaDataMap);
  }

  public ThirdPartAccount() {
  }

  public ThirdPartAccount(
    int id,
    String name,
    int channel,
    String username,
    String password,
    String membername,
    int binding,
    int company_id,
    int remain_num,
    String sync_time)
  {
    this();
    this.id = id;
    setIdIsSet(true);
    this.name = name;
    this.channel = channel;
    setChannelIsSet(true);
    this.username = username;
    this.password = password;
    this.membername = membername;
    this.binding = binding;
    setBindingIsSet(true);
    this.company_id = company_id;
    setCompany_idIsSet(true);
    this.remain_num = remain_num;
    setRemain_numIsSet(true);
    this.sync_time = sync_time;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThirdPartAccount(ThirdPartAccount other) {
    __isset_bitfield = other.__isset_bitfield;
    this.id = other.id;
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.channel = other.channel;
    if (other.isSetUsername()) {
      this.username = other.username;
    }
    if (other.isSetPassword()) {
      this.password = other.password;
    }
    if (other.isSetMembername()) {
      this.membername = other.membername;
    }
    this.binding = other.binding;
    this.company_id = other.company_id;
    this.remain_num = other.remain_num;
    if (other.isSetSync_time()) {
      this.sync_time = other.sync_time;
    }
  }

  public ThirdPartAccount deepCopy() {
    return new ThirdPartAccount(this);
  }

  @Override
  public void clear() {
    setIdIsSet(false);
    this.id = 0;
    this.name = null;
    setChannelIsSet(false);
    this.channel = 0;
    this.username = null;
    this.password = null;
    this.membername = null;
    setBindingIsSet(false);
    this.binding = 0;
    setCompany_idIsSet(false);
    this.company_id = 0;
    setRemain_numIsSet(false);
    this.remain_num = 0;
    this.sync_time = null;
  }

  public int getId() {
    return this.id;
  }

  public ThirdPartAccount setId(int id) {
    this.id = id;
    setIdIsSet(true);
    return this;
  }

  public void unsetId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __ID_ISSET_ID);
  }

  /** Returns true if field id is set (has been assigned a value) and false otherwise */
  public boolean isSetId() {
    return EncodingUtils.testBit(__isset_bitfield, __ID_ISSET_ID);
  }

  public void setIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __ID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public ThirdPartAccount setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public int getChannel() {
    return this.channel;
  }

  public ThirdPartAccount setChannel(int channel) {
    this.channel = channel;
    setChannelIsSet(true);
    return this;
  }

  public void unsetChannel() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  /** Returns true if field channel is set (has been assigned a value) and false otherwise */
  public boolean isSetChannel() {
    return EncodingUtils.testBit(__isset_bitfield, __CHANNEL_ISSET_ID);
  }

  public void setChannelIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __CHANNEL_ISSET_ID, value);
  }

  public String getUsername() {
    return this.username;
  }

  public ThirdPartAccount setUsername(String username) {
    this.username = username;
    return this;
  }

  public void unsetUsername() {
    this.username = null;
  }

  /** Returns true if field username is set (has been assigned a value) and false otherwise */
  public boolean isSetUsername() {
    return this.username != null;
  }

  public void setUsernameIsSet(boolean value) {
    if (!value) {
      this.username = null;
    }
  }

  public String getPassword() {
    return this.password;
  }

  public ThirdPartAccount setPassword(String password) {
    this.password = password;
    return this;
  }

  public void unsetPassword() {
    this.password = null;
  }

  /** Returns true if field password is set (has been assigned a value) and false otherwise */
  public boolean isSetPassword() {
    return this.password != null;
  }

  public void setPasswordIsSet(boolean value) {
    if (!value) {
      this.password = null;
    }
  }

  public String getMembername() {
    return this.membername;
  }

  public ThirdPartAccount setMembername(String membername) {
    this.membername = membername;
    return this;
  }

  public void unsetMembername() {
    this.membername = null;
  }

  /** Returns true if field membername is set (has been assigned a value) and false otherwise */
  public boolean isSetMembername() {
    return this.membername != null;
  }

  public void setMembernameIsSet(boolean value) {
    if (!value) {
      this.membername = null;
    }
  }

  public int getBinding() {
    return this.binding;
  }

  public ThirdPartAccount setBinding(int binding) {
    this.binding = binding;
    setBindingIsSet(true);
    return this;
  }

  public void unsetBinding() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __BINDING_ISSET_ID);
  }

  /** Returns true if field binding is set (has been assigned a value) and false otherwise */
  public boolean isSetBinding() {
    return EncodingUtils.testBit(__isset_bitfield, __BINDING_ISSET_ID);
  }

  public void setBindingIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __BINDING_ISSET_ID, value);
  }

  public int getCompany_id() {
    return this.company_id;
  }

  public ThirdPartAccount setCompany_id(int company_id) {
    this.company_id = company_id;
    setCompany_idIsSet(true);
    return this;
  }

  public void unsetCompany_id() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  /** Returns true if field company_id is set (has been assigned a value) and false otherwise */
  public boolean isSetCompany_id() {
    return EncodingUtils.testBit(__isset_bitfield, __COMPANY_ID_ISSET_ID);
  }

  public void setCompany_idIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __COMPANY_ID_ISSET_ID, value);
  }

  public int getRemain_num() {
    return this.remain_num;
  }

  public ThirdPartAccount setRemain_num(int remain_num) {
    this.remain_num = remain_num;
    setRemain_numIsSet(true);
    return this;
  }

  public void unsetRemain_num() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __REMAIN_NUM_ISSET_ID);
  }

  /** Returns true if field remain_num is set (has been assigned a value) and false otherwise */
  public boolean isSetRemain_num() {
    return EncodingUtils.testBit(__isset_bitfield, __REMAIN_NUM_ISSET_ID);
  }

  public void setRemain_numIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __REMAIN_NUM_ISSET_ID, value);
  }

  public String getSync_time() {
    return this.sync_time;
  }

  public ThirdPartAccount setSync_time(String sync_time) {
    this.sync_time = sync_time;
    return this;
  }

  public void unsetSync_time() {
    this.sync_time = null;
  }

  /** Returns true if field sync_time is set (has been assigned a value) and false otherwise */
  public boolean isSetSync_time() {
    return this.sync_time != null;
  }

  public void setSync_timeIsSet(boolean value) {
    if (!value) {
      this.sync_time = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case ID:
      if (value == null) {
        unsetId();
      } else {
        setId((Integer)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case CHANNEL:
      if (value == null) {
        unsetChannel();
      } else {
        setChannel((Integer)value);
      }
      break;

    case USERNAME:
      if (value == null) {
        unsetUsername();
      } else {
        setUsername((String)value);
      }
      break;

    case PASSWORD:
      if (value == null) {
        unsetPassword();
      } else {
        setPassword((String)value);
      }
      break;

    case MEMBERNAME:
      if (value == null) {
        unsetMembername();
      } else {
        setMembername((String)value);
      }
      break;

    case BINDING:
      if (value == null) {
        unsetBinding();
      } else {
        setBinding((Integer)value);
      }
      break;

    case COMPANY_ID:
      if (value == null) {
        unsetCompany_id();
      } else {
        setCompany_id((Integer)value);
      }
      break;

    case REMAIN_NUM:
      if (value == null) {
        unsetRemain_num();
      } else {
        setRemain_num((Integer)value);
      }
      break;

    case SYNC_TIME:
      if (value == null) {
        unsetSync_time();
      } else {
        setSync_time((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case ID:
      return Integer.valueOf(getId());

    case NAME:
      return getName();

    case CHANNEL:
      return Integer.valueOf(getChannel());

    case USERNAME:
      return getUsername();

    case PASSWORD:
      return getPassword();

    case MEMBERNAME:
      return getMembername();

    case BINDING:
      return Integer.valueOf(getBinding());

    case COMPANY_ID:
      return Integer.valueOf(getCompany_id());

    case REMAIN_NUM:
      return Integer.valueOf(getRemain_num());

    case SYNC_TIME:
      return getSync_time();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case ID:
      return isSetId();
    case NAME:
      return isSetName();
    case CHANNEL:
      return isSetChannel();
    case USERNAME:
      return isSetUsername();
    case PASSWORD:
      return isSetPassword();
    case MEMBERNAME:
      return isSetMembername();
    case BINDING:
      return isSetBinding();
    case COMPANY_ID:
      return isSetCompany_id();
    case REMAIN_NUM:
      return isSetRemain_num();
    case SYNC_TIME:
      return isSetSync_time();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThirdPartAccount)
      return this.equals((ThirdPartAccount)that);
    return false;
  }

  public boolean equals(ThirdPartAccount that) {
    if (that == null)
      return false;

    boolean this_present_id = true;
    boolean that_present_id = true;
    if (this_present_id || that_present_id) {
      if (!(this_present_id && that_present_id))
        return false;
      if (this.id != that.id)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_channel = true;
    boolean that_present_channel = true;
    if (this_present_channel || that_present_channel) {
      if (!(this_present_channel && that_present_channel))
        return false;
      if (this.channel != that.channel)
        return false;
    }

    boolean this_present_username = true && this.isSetUsername();
    boolean that_present_username = true && that.isSetUsername();
    if (this_present_username || that_present_username) {
      if (!(this_present_username && that_present_username))
        return false;
      if (!this.username.equals(that.username))
        return false;
    }

    boolean this_present_password = true && this.isSetPassword();
    boolean that_present_password = true && that.isSetPassword();
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!this.password.equals(that.password))
        return false;
    }

    boolean this_present_membername = true && this.isSetMembername();
    boolean that_present_membername = true && that.isSetMembername();
    if (this_present_membername || that_present_membername) {
      if (!(this_present_membername && that_present_membername))
        return false;
      if (!this.membername.equals(that.membername))
        return false;
    }

    boolean this_present_binding = true;
    boolean that_present_binding = true;
    if (this_present_binding || that_present_binding) {
      if (!(this_present_binding && that_present_binding))
        return false;
      if (this.binding != that.binding)
        return false;
    }

    boolean this_present_company_id = true;
    boolean that_present_company_id = true;
    if (this_present_company_id || that_present_company_id) {
      if (!(this_present_company_id && that_present_company_id))
        return false;
      if (this.company_id != that.company_id)
        return false;
    }

    boolean this_present_remain_num = true;
    boolean that_present_remain_num = true;
    if (this_present_remain_num || that_present_remain_num) {
      if (!(this_present_remain_num && that_present_remain_num))
        return false;
      if (this.remain_num != that.remain_num)
        return false;
    }

    boolean this_present_sync_time = true && this.isSetSync_time();
    boolean that_present_sync_time = true && that.isSetSync_time();
    if (this_present_sync_time || that_present_sync_time) {
      if (!(this_present_sync_time && that_present_sync_time))
        return false;
      if (!this.sync_time.equals(that.sync_time))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_id = true;
    list.add(present_id);
    if (present_id)
      list.add(id);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_channel = true;
    list.add(present_channel);
    if (present_channel)
      list.add(channel);

    boolean present_username = true && (isSetUsername());
    list.add(present_username);
    if (present_username)
      list.add(username);

    boolean present_password = true && (isSetPassword());
    list.add(present_password);
    if (present_password)
      list.add(password);

    boolean present_membername = true && (isSetMembername());
    list.add(present_membername);
    if (present_membername)
      list.add(membername);

    boolean present_binding = true;
    list.add(present_binding);
    if (present_binding)
      list.add(binding);

    boolean present_company_id = true;
    list.add(present_company_id);
    if (present_company_id)
      list.add(company_id);

    boolean present_remain_num = true;
    list.add(present_remain_num);
    if (present_remain_num)
      list.add(remain_num);

    boolean present_sync_time = true && (isSetSync_time());
    list.add(present_sync_time);
    if (present_sync_time)
      list.add(sync_time);

    return list.hashCode();
  }

  @Override
  public int compareTo(ThirdPartAccount other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetId()).compareTo(other.isSetId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.id, other.id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetChannel()).compareTo(other.isSetChannel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetChannel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.channel, other.channel);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUsername()).compareTo(other.isSetUsername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUsername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.username, other.username);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetPassword()).compareTo(other.isSetPassword());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPassword()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.password, other.password);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetMembername()).compareTo(other.isSetMembername());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMembername()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.membername, other.membername);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBinding()).compareTo(other.isSetBinding());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBinding()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.binding, other.binding);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCompany_id()).compareTo(other.isSetCompany_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCompany_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.company_id, other.company_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemain_num()).compareTo(other.isSetRemain_num());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemain_num()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remain_num, other.remain_num);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSync_time()).compareTo(other.isSetSync_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSync_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sync_time, other.sync_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThirdPartAccount(");
    boolean first = true;

    sb.append("id:");
    sb.append(this.id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("channel:");
    sb.append(this.channel);
    first = false;
    if (!first) sb.append(", ");
    sb.append("username:");
    if (this.username == null) {
      sb.append("null");
    } else {
      sb.append(this.username);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("password:");
    if (this.password == null) {
      sb.append("null");
    } else {
      sb.append(this.password);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("membername:");
    if (this.membername == null) {
      sb.append("null");
    } else {
      sb.append(this.membername);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("binding:");
    sb.append(this.binding);
    first = false;
    if (!first) sb.append(", ");
    sb.append("company_id:");
    sb.append(this.company_id);
    first = false;
    if (!first) sb.append(", ");
    sb.append("remain_num:");
    sb.append(this.remain_num);
    first = false;
    if (!first) sb.append(", ");
    sb.append("sync_time:");
    if (this.sync_time == null) {
      sb.append("null");
    } else {
      sb.append(this.sync_time);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThirdPartAccountStandardSchemeFactory implements SchemeFactory {
    public ThirdPartAccountStandardScheme getScheme() {
      return new ThirdPartAccountStandardScheme();
    }
  }

  private static class ThirdPartAccountStandardScheme extends StandardScheme<ThirdPartAccount> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThirdPartAccount struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.id = iprot.readI32();
              struct.setIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CHANNEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.channel = iprot.readI32();
              struct.setChannelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // USERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.username = iprot.readString();
              struct.setUsernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // PASSWORD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.password = iprot.readString();
              struct.setPasswordIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // MEMBERNAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.membername = iprot.readString();
              struct.setMembernameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // BINDING
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.binding = iprot.readI32();
              struct.setBindingIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // COMPANY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.company_id = iprot.readI32();
              struct.setCompany_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // REMAIN_NUM
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.remain_num = iprot.readI32();
              struct.setRemain_numIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // SYNC_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sync_time = iprot.readString();
              struct.setSync_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThirdPartAccount struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(ID_FIELD_DESC);
      oprot.writeI32(struct.id);
      oprot.writeFieldEnd();
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(CHANNEL_FIELD_DESC);
      oprot.writeI32(struct.channel);
      oprot.writeFieldEnd();
      if (struct.username != null) {
        oprot.writeFieldBegin(USERNAME_FIELD_DESC);
        oprot.writeString(struct.username);
        oprot.writeFieldEnd();
      }
      if (struct.password != null) {
        oprot.writeFieldBegin(PASSWORD_FIELD_DESC);
        oprot.writeString(struct.password);
        oprot.writeFieldEnd();
      }
      if (struct.membername != null) {
        oprot.writeFieldBegin(MEMBERNAME_FIELD_DESC);
        oprot.writeString(struct.membername);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BINDING_FIELD_DESC);
      oprot.writeI32(struct.binding);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COMPANY_ID_FIELD_DESC);
      oprot.writeI32(struct.company_id);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REMAIN_NUM_FIELD_DESC);
      oprot.writeI32(struct.remain_num);
      oprot.writeFieldEnd();
      if (struct.sync_time != null) {
        oprot.writeFieldBegin(SYNC_TIME_FIELD_DESC);
        oprot.writeString(struct.sync_time);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThirdPartAccountTupleSchemeFactory implements SchemeFactory {
    public ThirdPartAccountTupleScheme getScheme() {
      return new ThirdPartAccountTupleScheme();
    }
  }

  private static class ThirdPartAccountTupleScheme extends TupleScheme<ThirdPartAccount> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThirdPartAccount struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      BitSet optionals = new BitSet();
      if (struct.isSetId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetChannel()) {
        optionals.set(2);
      }
      if (struct.isSetUsername()) {
        optionals.set(3);
      }
      if (struct.isSetPassword()) {
        optionals.set(4);
      }
      if (struct.isSetMembername()) {
        optionals.set(5);
      }
      if (struct.isSetBinding()) {
        optionals.set(6);
      }
      if (struct.isSetCompany_id()) {
        optionals.set(7);
      }
      if (struct.isSetRemain_num()) {
        optionals.set(8);
      }
      if (struct.isSetSync_time()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetId()) {
        oprot.writeI32(struct.id);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetChannel()) {
        oprot.writeI32(struct.channel);
      }
      if (struct.isSetUsername()) {
        oprot.writeString(struct.username);
      }
      if (struct.isSetPassword()) {
        oprot.writeString(struct.password);
      }
      if (struct.isSetMembername()) {
        oprot.writeString(struct.membername);
      }
      if (struct.isSetBinding()) {
        oprot.writeI32(struct.binding);
      }
      if (struct.isSetCompany_id()) {
        oprot.writeI32(struct.company_id);
      }
      if (struct.isSetRemain_num()) {
        oprot.writeI32(struct.remain_num);
      }
      if (struct.isSetSync_time()) {
        oprot.writeString(struct.sync_time);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThirdPartAccount struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.id = iprot.readI32();
        struct.setIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.channel = iprot.readI32();
        struct.setChannelIsSet(true);
      }
      if (incoming.get(3)) {
        struct.username = iprot.readString();
        struct.setUsernameIsSet(true);
      }
      if (incoming.get(4)) {
        struct.password = iprot.readString();
        struct.setPasswordIsSet(true);
      }
      if (incoming.get(5)) {
        struct.membername = iprot.readString();
        struct.setMembernameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.binding = iprot.readI32();
        struct.setBindingIsSet(true);
      }
      if (incoming.get(7)) {
        struct.company_id = iprot.readI32();
        struct.setCompany_idIsSet(true);
      }
      if (incoming.get(8)) {
        struct.remain_num = iprot.readI32();
        struct.setRemain_numIsSet(true);
      }
      if (incoming.get(9)) {
        struct.sync_time = iprot.readString();
        struct.setSync_timeIsSet(true);
      }
    }
  }

}

