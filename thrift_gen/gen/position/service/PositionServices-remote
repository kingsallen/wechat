#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.10.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:tornado
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from thrift_gen.gen.position.service import PositionServices
from thrift_gen.gen.position.service.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  Response getResources(CommonQuery query)')
    print('  Response getRecommendedPositions(i32 pid)')
    print('  Response verifyCustomize(i32 positionId)')
    print('  Response getPositionById(i32 positionId)')
    print('  Response CustomField(string param)')
    print('   changeToThirdPartyPosition( form, Position position)')
    print('  ThirdPartyPositionForSynchronizationWithAccount createRefreshPosition(i32 positionId, i32 channel)')
    print('  bool ifAllowRefresh(i32 positionId, i32 channel)')
    print('   getThirdPartyPositions(CommonQuery query)')
    print('   getPositionList(WechatPositionListQuery query)')
    print('   getPositionListRpExt( pids)')
    print('   getRpPositionList(i32 hb_config_id)')
    print('  WechatShareData getShareInfo(i32 hb_config_id)')
    print('  CampaignHeadImageVO headImage()')
    print('  PositionDetailsVO positionDetails(i32 positionId)')
    print('  PositionDetailsListVO companyHotPositionDetailsList(i32 companyId, i32 page, i32 per_age)')
    print('  PositionDetailsListVO similarityPositionDetailsList(i32 pid, i32 page, i32 per_age)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = PositionServices.Client(protocol)
transport.open()

if cmd == 'getResources':
    if len(args) != 1:
        print('getResources requires 1 args')
        sys.exit(1)
    pp.pprint(client.getResources(eval(args[0]),))

elif cmd == 'getRecommendedPositions':
    if len(args) != 1:
        print('getRecommendedPositions requires 1 args')
        sys.exit(1)
    pp.pprint(client.getRecommendedPositions(eval(args[0]),))

elif cmd == 'verifyCustomize':
    if len(args) != 1:
        print('verifyCustomize requires 1 args')
        sys.exit(1)
    pp.pprint(client.verifyCustomize(eval(args[0]),))

elif cmd == 'getPositionById':
    if len(args) != 1:
        print('getPositionById requires 1 args')
        sys.exit(1)
    pp.pprint(client.getPositionById(eval(args[0]),))

elif cmd == 'CustomField':
    if len(args) != 1:
        print('CustomField requires 1 args')
        sys.exit(1)
    pp.pprint(client.CustomField(args[0],))

elif cmd == 'changeToThirdPartyPosition':
    if len(args) != 2:
        print('changeToThirdPartyPosition requires 2 args')
        sys.exit(1)
    pp.pprint(client.changeToThirdPartyPosition(eval(args[0]), eval(args[1]),))

elif cmd == 'createRefreshPosition':
    if len(args) != 2:
        print('createRefreshPosition requires 2 args')
        sys.exit(1)
    pp.pprint(client.createRefreshPosition(eval(args[0]), eval(args[1]),))

elif cmd == 'ifAllowRefresh':
    if len(args) != 2:
        print('ifAllowRefresh requires 2 args')
        sys.exit(1)
    pp.pprint(client.ifAllowRefresh(eval(args[0]), eval(args[1]),))

elif cmd == 'getThirdPartyPositions':
    if len(args) != 1:
        print('getThirdPartyPositions requires 1 args')
        sys.exit(1)
    pp.pprint(client.getThirdPartyPositions(eval(args[0]),))

elif cmd == 'getPositionList':
    if len(args) != 1:
        print('getPositionList requires 1 args')
        sys.exit(1)
    pp.pprint(client.getPositionList(eval(args[0]),))

elif cmd == 'getPositionListRpExt':
    if len(args) != 1:
        print('getPositionListRpExt requires 1 args')
        sys.exit(1)
    pp.pprint(client.getPositionListRpExt(eval(args[0]),))

elif cmd == 'getRpPositionList':
    if len(args) != 1:
        print('getRpPositionList requires 1 args')
        sys.exit(1)
    pp.pprint(client.getRpPositionList(eval(args[0]),))

elif cmd == 'getShareInfo':
    if len(args) != 1:
        print('getShareInfo requires 1 args')
        sys.exit(1)
    pp.pprint(client.getShareInfo(eval(args[0]),))

elif cmd == 'headImage':
    if len(args) != 0:
        print('headImage requires 0 args')
        sys.exit(1)
    pp.pprint(client.headImage())

elif cmd == 'positionDetails':
    if len(args) != 1:
        print('positionDetails requires 1 args')
        sys.exit(1)
    pp.pprint(client.positionDetails(eval(args[0]),))

elif cmd == 'companyHotPositionDetailsList':
    if len(args) != 3:
        print('companyHotPositionDetailsList requires 3 args')
        sys.exit(1)
    pp.pprint(client.companyHotPositionDetailsList(eval(args[0]), eval(args[1]), eval(args[2]),))

elif cmd == 'similarityPositionDetailsList':
    if len(args) != 3:
        print('similarityPositionDetailsList requires 3 args')
        sys.exit(1)
    pp.pprint(client.similarityPositionDetailsList(eval(args[0]), eval(args[1]), eval(args[2]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
